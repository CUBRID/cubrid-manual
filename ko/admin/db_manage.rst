데이터베이스 관리
=================

데이터베이스 사용자
-------------------

CUBRID 데이터베이스 사용자는 동일한 권한을 갖는 멤버를 가질 수 있다. 사용자에게 권한 **A**\가 부여되면, 상기 사용자에게 속하는 모든 멤버에게도 권한 **A**\가 동일하게 부여된다. 이와 같이 데이터베이스 사용자와 그에 속한 멤버를 '그룹'이라 하고, 멤버가 없는 사용자를 '사용자'라 한다.

CUBRID는 **DBA**\와 **PUBLIC**\이라는 사용자를 기본으로 제공한다.

*   **DBA**\는 모든 사용자의 멤버가 되며 데이터베이스의 모든 객체에 접근할 수 있는 최고 권한 사용자이다. 또한, **DBA**\만이 데이터베이스 사용자를 추가, 편집, 삭제할 수 있는 권한을 갖는다.

*   **DBA**\를 포함한 모든 사용자는 **PUBLIC**\ 의 멤버가 되므로 모든 데이터베이스 사용자는 **PUBLIC**\에 부여된 권한을 가진다. 예를 들어, **PUBLIC** 사용자에 권한 **B**\를 추가하면 데이터베이스의 모든 사용자에게 일괄적으로 권한 **B**\가 부여된다.  사용자의 추가, 권한 부여에 대한 자세한 내용은 :doc:`/sql/authorization`\ 을 참고한다.

.. _databases-txt-file:

databases.txt 파일
------------------

CUBRID에 존재하는 모든 데이터베이스의 위치 정보는 **databases.txt** 파일에 저장하는데, 이를 데이터베이스 위치 정보 파일이라 한다. 이러한 데이터베이스 위치 정보 파일은 데이터베이스의 생성, 이름 변경, 삭제 및 복사에 관한 유틸리티를 수행하거나 각 데이터베이스를 구동할 때에 사용되며, 기본으로는 설치 디렉터리의 **databases** 디렉터리에 위치하고, **CUBRID_DATABASES** 환경 변수로 디렉터리 위치를 지정할 수 있다.

::

    db_name db_directory server_host logfile_directory

데이터베이스 위치 정보 파일의 라인별 형식은 구문에 정의된 바와 같으며, 데이터베이스 이름, 데이터베이스 경로, 서버 호스트 및 로그 파일의 경로에 관한 정보를 저장한다. 다음은 데이터베이스 위치 정보 파일의 내용을 확인한 예이다.

::

    % more databases.txt
    
    dist_testdb /home1/user/CUBRID/bin d85007 /home1/user/CUBRID/bin
    dist_demodb /home1/user/CUBRID/bin d85007 /home1/user/CUBRID/bin
    testdb /home1/user/CUBRID/databases/testdb d85007 /home1/user/CUBRID/databases/testdb
    demodb /home1/user/CUBRID/databases/demodb d85007 /home1/user/CUBRID/databases/demodb

데이터베이스 위치 정보 파일의 저장 디렉터리는 기본적으로 설치 디렉터리의 **databases** 디렉터리로 지정되며, 시스템 환경 변수 **CUBRID_DATABASES**\ 의 설정을 변경하여 기본 디렉터리를 변경할 수 있다. 데이터베이스 위치 정보 파일의 저장 디렉터리 경로가 유효해야 데이터베이스 관리를 위한 **cubrid** 유틸리티가 데이터베이스 위치 정보 파일에 접근할 수 있게 된다. 이를 위해서 사용자는 디렉터리 경로를 정확하게 입력해야 하고, 해당 디렉터리 경로에 대해 쓰기 권한을 가지는지 확인해야 한다. 다음은 **CUBRID_DATABASES** 환경 변수에 설정된 값을 확인하는 예이다.

::

    % set | grep CUBRID_DATABASES
    CUBRID_DATABASES=/home1/user/CUBRID/databases

만약 **CUBRID_DATABASES** 환경 변수에서 유효하지 않은 디렉터리 경로가 설정되는 경우에는 에러가 발생하며, 설정된 디렉터리 경로는 유효하나 데이터베이스 위치 정보 파일이 존재하지 않는 경우에는 새로운 위치 정보 파일을 생성한다. 또한, **CUBRID_DATABASES** 환경 변수가 아예 설정되지 않은 경우에는 현재 작업 디렉터리에서 위치 정보 파일을 검색한다.

.. _database-volume:

데이터베이스 볼륨
-----------------

CUBRID 데이터베이스의 볼륨은 크게 영구적 볼륨, 일시적 볼륨, 백업 볼륨으로 분류한다. 

*   영구적 볼륨 중
 
    *   데이터베이스 볼륨에는 범용(generic), 데이터(data), 인덱스(index), 임시(temp) 볼륨이 있고, 
    *   로그 볼륨에는 활성(active) 로그, 보관(archiving) 로그, 백그라운드 보관(background archiving) 로그가 있다.
    
*   일시적 볼륨에는 일시적 임시(temporary temp) 볼륨이 있다.

볼륨에 대한 자세한 내용은 :ref:`database-volume-structure`\ 를 참고한다.

다음은 *testdb* 데이터베이스를 운영할 때 발생하는 데이터베이스 관련 파일의 예이다.

+----------------+-------+-----------------+----------------+------------------------------------------------------------------------------------------------------+
| 파일 이름      | 크기  | 종류            | 분류           | 설명                                                                                                 |
+================+=======+=================+================+======================================================================================================+
| testdb         | 40MB  | generic         | 데이터베이스   | DB 생성 시 최초로 생성되는 볼륨. **generic** 볼륨으로 사용되며, DB의 메타 정보를 포함한다.           |
|                |       |                 | 볼륨           | cubrid.conf의 db_volume_size를 40M로 명시한 후 "cubrid createdb"를 수행했거나 "cubrid createdb"      |
|                |       |                 |                | 수행 시 --db-volume-size를 40M로 명시했기 때문에 파일의 크기는 40MB가 되었다.                        |
|                |       |                 |                |                                                                                                      |
+----------------+-------+-----------------+                +------------------------------------------------------------------------------------------------------+
| testdb_x001    | 40MB  | generic, data   |                | 자동으로 생성된 **generic** 파일 또는 사용자의 볼륨 추가 명령으로 생성된 파일.                       |
|                |       | index           |                | cubrid.conf의 db_volume_size를 40M로 명시한 후 DB를 시작했기                                         |
|                |       | 중 하나         |                | 때문에 자동으로 생성되는 **generic** 파일의 크기는 40MB가 되었다.                                    |
+----------------+-------+-----------------+                +------------------------------------------------------------------------------------------------------+
| testdb_x002    | 40MB  | generic, data   |                | 자동으로 생성된 **generic** 파일 또는 사용자의 볼륨 추가 명령으로 생성된 파일                        |
|                |       | index  중 하나  |                |                                                                                                      |
+----------------+-------+-----------------+                +------------------------------------------------------------------------------------------------------+
| testdb_x003    | 40MB  | generic, data   |                | 자동으로 생성된 **generic** 파일 또는 사용자의 볼륨 추가 명령으로 생성된 파일                        |
|                |       | index 중 하나   |                |                                                                                                      |
+----------------+-------+-----------------+                +------------------------------------------------------------------------------------------------------+
| testdb_x004    | 40MB  | generic, data   |                | 자동으로 생성된 **generic** 파일 또는 사용자의 볼륨 추가 명령으로 생성된 파일                        |
|                |       | index 중 하나   |                |                                                                                                      |
+----------------+-------+-----------------+                +------------------------------------------------------------------------------------------------------+
| testdb_x005    | 40MB  | generic, data   |                | 자동으로 생성된 **generic** 파일 또는 사용자의 볼륨 추가 명령으로 생성된 파일                        |
|                |       | index 중 하나   |                |                                                                                                      |
+----------------+-------+-----------------+                +------------------------------------------------------------------------------------------------------+
| testdb_x006    | 2GB   | generic, data   |                | 자동으로 생성된 **generic** 파일 또는 사용자의 볼륨 추가 명령으로 생성된 파일.                       |
|                |       | index 중 하나   |                |                                                                                                      |
|                |       |                 |                |                                                                                                      |
+----------------+-------+-----------------+----------------+------------------------------------------------------------------------------------------------------+
| testdb_t32766  | 360MB | temporary temp  | Temp Volume    | **temp** 볼륨이 필요한 질의(예: 정렬, 스캐닝, 인덱스 생성) 실행 중 **temp** 볼륨의 공간이            |
|                |       |                 |                | 부족할 때 임시로 생성되는 파일. DB를 재시작하면 삭제된다. 하지만 임의로 삭제하면 안 된다.            |
|                |       |                 |                |                                                                                                      |
+----------------+-------+-----------------+----------------+------------------------------------------------------------------------------------------------------+
| testdb_lgar_t  | 40MB  | background      | 로그 볼륨      | 백그라운드 보관(background archiving) 기능과 관련된 로그 파일.                                       |
|                |       | archiving       |                | 보관 로그를 저장할 때 사용된다.                                                                      |
+----------------+-------+-----------------+                +------------------------------------------------------------------------------------------------------+
| testdb_lgar224 | 40MB  | archiving       |                | 보관 로그(archiving log)가 계속 쌓이면서 세 자리 숫자로 끝나는 파일들이 생성되는데,                  |
|                |       |                 |                | cubrid backupdb -r 옵션 또는 cubrid.conf의 log_max_archives 파라미터의 설정으로 인해 001~223까지의   |
|                |       |                 |                | 보관 로그들은 정상적으로 삭제된 것으로 보인다. 보관 로그가  삭제되는 경우, lginf 파일의 REMOVE       |
|                |       |                 |                | 섹션에서 삭제된 보관 로그 번호를 확인할 수 있다. :ref:`managing-archive-logs`\ 를 참고한다.          |
+----------------+-------+-----------------+                +------------------------------------------------------------------------------------------------------+
| testdb_lgat    | 40MB  | active          |                | 활성 로그(active log) 파일                                                                           |
+----------------+-------+-----------------+----------------+------------------------------------------------------------------------------------------------------+

*   데이터베이스 볼륨 파일

    *   위의 예에서 *testdb*, *testdb_x001* ~ *testdb_x006* 이 데이터베이스 볼륨 파일에 해당된다.
    *   "cubrid createdb", "cubrid addvoldb" 명령 수행 시 "--db-volume-size" 옵션에 의해 크기가 정해진다. 
    *   자동으로 생성되는 볼륨은 항상 **generic** 타입이다.
    
*   로그 볼륨 파일

    *   위의 예에서 *testdb_lgar_t*, *testdb_lgar224*, *testdb_lgat* 가 로그 볼륨 파일에 해당된다.
    *   "cubrid createdb" 명령 수행 시 "--log-volume-size" 옵션에 의해 크기가 정해진다.  

.. note::

    임시 볼륨은 질의 처리 및 정렬(sorting)을 수행할 때 중간, 최종 결과를 임시로 저장하는 공간으로, 일시적 임시 볼륨과 영구적 임시 볼륨으로 구분한다.

    영구적 또는 일시적 임시 볼륨을 사용할 수 있는 질의의 예는 다음과 같다.

    *   **SELECT** 문 등 질의 결과가 생성되는 질의
    *   **GROUP BY** 나 **ORDER BY** 가 포함된 질의
    *   부질의(subquery)가 포함된 질의
    *   정렬 병합(sort-merge) 조인이 수행되는 질의
    *   **CREATE INDEX** 문이 포함된 질의

    위와 같은 질의를 수행할 때 **SELECT** 결과를 저장하거나 데이터를 정렬하기 위해 지정한 메모리 공간 (**cubrid.conf** 에서 지정하는 시스템 파라미터인 **temp_file_memory_size_in_pages**\에 의해 메모리 공간의 크기가 결정됨)을 소진하면 임시 볼륨 공간을 사용한다. 질의 처리 및 정렬 결과를 저장하기 위해 사용하는 저장 공간의 순서는 다음과 같으며, 위의 저장 공간을 모두 소진하면 아래의 저장 공간을 사용한다.

    *   **temp_file_memory_size_in_pages** 시스템 파라미터에 의해 확보된 메모리
    *   영구적 임시 볼륨
    *   일시적 임시 볼륨

    (큰 크기의 임시 공간이 필요한 질의를 수행하면서 일시적 임시 볼륨이 기대 이상으로 증가함으로 인해) 디스크의 여유 공간이 부족해져 시스템 운영에 문제가 발생하는 것을 예방하려면, 
    
    *   예상하는 영구적 임시 볼륨을 미리 확보하고, 
    *   일시적 임시 볼륨에서 하나의 질의가 수행될 때 사용되는 공간의 최대 크기를 제한하는 것이 좋다. 
    
    영구적 임시 볼륨은 "cubrid addvoldb -p temp" 명령을 실행하여 확보하며, 하나의 질의가 수행되는 동안 차지하는 일시적 임시 공간의 최대 크기는 **cubrid.conf**\의 **temp_file_max_size_in_pages** 파라미터에 의해 제한한다(기본값은 -1로 무제한).

